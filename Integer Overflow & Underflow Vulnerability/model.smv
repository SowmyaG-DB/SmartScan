MODULE main
VAR
 state : {"Start", "CountIncremented"};
 count : 0..255;
ASSIGN
 init(state) := "Start";
 init(count) := 255;
 next(state) := case
 state = "Start" : "CountIncremented";
 state = "CountIncremented" : "CountIncremented";
 TRUE : state;
 esac;
 next(count) := case
 state = "Start" & next(state) = "CountIncremented" : (count + 1) mod 256;
 state = "CountIncremented" & next(state) = "CountIncremented" : (count + 1) mod 256;
 TRUE : count;
 esac;

-- No Overflow
SPEC AG (count <= 255);

-- Overflow Detection
SPEC EF (count = 0);
